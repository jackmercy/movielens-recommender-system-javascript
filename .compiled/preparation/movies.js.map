{"version":3,"sources":["../../src/preparation/movies.js"],"names":["byId","prepareDictionaries","scaleFeatures","synthesizeFeatures","getCoefficients","toFeaturizedMovies","toFeaturizedRelease","toFeaturizedAdult","toFeaturizedHomepage","toFeaturizedLanguage","toFeaturizedFromDictionary","toFeaturizedNumber","fromArrayToMap","withTokenizedAndStemmed","filterByThreshold","toDictionary","zip","PorterStemmer","attach","prepareMovies","moviesMetaData","moviesKeywords","console","log","MOVIES_IN_LIST","MOVIES_BY_ID","reduce","DICTIONARIES","X","map","means","ranges","moviesById","movie","id","movies","genresDictionary","studioDictionary","keywordsDictionary","overviewDictionary","row","feature","key","featureIndexes","includes","M","length","initC","sums","mins","maxs","helperC","result","value","dictionaries","toFeatureVector","featureVector","push","release","Number","slice","adult","homepage","language","dictionary","property","propertyIds","isIncluded","number","array","transformed","name","tokenizeAndStem","threshold","Object","keys","filter","count","forEach","innerValue","keywords","mId"],"mappings":"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","file":"movies.js","sourcesContent":["import natural from 'natural';\r\n\r\nnatural.PorterStemmer.attach();\r\n\r\nfunction prepareMovies(moviesMetaData, moviesKeywords) {\r\n  console.log('Preparing Movies ... \\n');\r\n\r\n  // Pre-processing movies for unified data structure\r\n  // E.g. get overview property into same shape as studio property\r\n  console.log('(1) Zipping Movies');\r\n  let MOVIES_IN_LIST = zip(moviesMetaData, moviesKeywords);\r\n  \r\n  MOVIES_IN_LIST = withTokenizedAndStemmed(MOVIES_IN_LIST, 'overview');\r\n  MOVIES_IN_LIST = fromArrayToMap(MOVIES_IN_LIST, 'overview');\r\n  \r\n  // Keep a map of movies for later reference\r\n  let MOVIES_BY_ID = MOVIES_IN_LIST.reduce(byId, {});\r\n\r\n  console.log('(2) Creating Dictionaries');\r\n  // Preparing dictionaries for feature extraction\r\n  let DICTIONARIES = prepareDictionaries(MOVIES_IN_LIST);\r\n  \r\n  // Feature Extraction:\r\n  // Map different types to numerical values (e.g. adult to 0 or 1)\r\n  // Map dictionaries to partial feature vectors\r\n  console.log('(3) Extracting Features');\r\n  let X = MOVIES_IN_LIST.map(toFeaturizedMovies(DICTIONARIES));\r\n  \r\n  // Extract a couple of valuable coefficients\r\n  // Can be used in a later stage (e.g. feature scaling)\r\n  console.log('(4) Calculating Coefficients');\r\n  let { means, ranges } = getCoefficients(X);\r\n  console.log({ means, ranges });\r\n  // Synthesize Features:\r\n  // Missing features (such as budget, release, revenue)\r\n  // can be synthesized with the mean of the features\r\n  console.log('(5) Synthesizing Features');\r\n  X = synthesizeFeatures(X, means, [0, 1, 2, 3, 4, 5, 6]);\r\n\r\n  // Feature Scaling:\r\n  // Normalize features based on mean and range vectors\r\n  console.log('(6) Scaling Features \\n');\r\n  X = scaleFeatures(X, means, ranges);\r\n  \r\n  return {\r\n    MOVIES_BY_ID,\r\n    MOVIES_IN_LIST,\r\n    X,\r\n  };\r\n}\r\n\r\nexport function byId(moviesById, movie) {\r\n  moviesById[movie.id] = movie;\r\n  return moviesById;\r\n}\r\n\r\nexport function prepareDictionaries(movies) {\r\n  let genresDictionary = toDictionary(movies, 'genres');\r\n  let studioDictionary = toDictionary(movies, 'studio');\r\n  let keywordsDictionary = toDictionary(movies, 'keywords');\r\n  let overviewDictionary = toDictionary(movies, 'overview');\r\n\r\n  // Customize the threshold to your own needs\r\n  // Depending on threshold you get a different size of a feature vector for a movie\r\n  // The following case attempts to keep feature vector small for computational efficiency\r\n  genresDictionary = filterByThreshold(genresDictionary, 1);\r\n  studioDictionary = filterByThreshold(studioDictionary, 75);\r\n  keywordsDictionary = filterByThreshold(keywordsDictionary, 150);\r\n  overviewDictionary = filterByThreshold(overviewDictionary, 750);\r\n\r\n  return {\r\n    genresDictionary,\r\n    studioDictionary,\r\n    keywordsDictionary,\r\n    overviewDictionary,\r\n  };\r\n}\r\n\r\nexport function scaleFeatures(X, means, ranges) {\r\n  return X.map((row) => {\r\n    return row.map((feature, key) => {\r\n      return (feature - means[key]) / ranges[key];\r\n    });\r\n  });\r\n};\r\n\r\nexport function synthesizeFeatures(X, means, featureIndexes) {\r\n  return X.map((row) => {\r\n    return row.map((feature, key) => {\r\n      if (featureIndexes.includes(key) && feature === 'undefined') {\r\n        return means[key];\r\n      } else {\r\n        return feature;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function getCoefficients(X) {\r\n  const M = X.length;\r\n\r\n  const initC = {\r\n    sums: [],\r\n    mins: [],\r\n    maxs: [],\r\n  };\r\n\r\n  const helperC = X.reduce((result, row) => {\r\n    if (row.includes('undefined')) {\r\n      return result;\r\n    }\r\n\r\n    return {\r\n      sums: row.map((feature, key) => {\r\n        if (result.sums[key]) {\r\n          return result.sums[key] + feature;\r\n        } else {\r\n          return feature;\r\n        }\r\n      }),\r\n      mins: row.map((feature, key) => {\r\n        if (result.mins[key] === 'undefined') {\r\n          return result.mins[key];\r\n        }\r\n\r\n        if (result.mins[key] <= feature) {\r\n          return result.mins[key];\r\n        } else {\r\n          return feature;\r\n        }\r\n      }),\r\n      maxs: row.map((feature, key) => {\r\n        if (result.maxs[key] === 'undefined') {\r\n          return result.maxs[key];\r\n        }\r\n\r\n        if (result.maxs[key] >= feature) {\r\n          return result.maxs[key];\r\n        } else {\r\n          return feature;\r\n        }\r\n      }),\r\n    };\r\n  }, initC);\r\n\r\n  const means = helperC.sums.map(value => value / M);\r\n  const ranges =  helperC.mins.map((value, key) => helperC.maxs[key] - value);\r\n\r\n  return { ranges, means };\r\n}\r\n\r\nexport function toFeaturizedMovies(dictionaries) {\r\n  return function toFeatureVector(movie) {\r\n    const featureVector = [];\r\n\r\n    featureVector.push(toFeaturizedNumber(movie, 'budget'));\r\n    featureVector.push(toFeaturizedNumber(movie, 'popularity'));\r\n    featureVector.push(toFeaturizedNumber(movie, 'revenue'));\r\n    featureVector.push(toFeaturizedNumber(movie, 'runtime'));\r\n    featureVector.push(toFeaturizedNumber(movie, 'voteAverage'));\r\n    featureVector.push(toFeaturizedNumber(movie, 'voteCount'));\r\n    featureVector.push(toFeaturizedRelease(movie));\r\n\r\n    featureVector.push(toFeaturizedAdult(movie));\r\n    featureVector.push(toFeaturizedHomepage(movie));\r\n    featureVector.push(toFeaturizedLanguage(movie));\r\n\r\n    featureVector.push(...toFeaturizedFromDictionary(movie, dictionaries.genresDictionary, 'genres'));\r\n    featureVector.push(...toFeaturizedFromDictionary(movie, dictionaries.overviewDictionary, 'overview'));\r\n    featureVector.push(...toFeaturizedFromDictionary(movie, dictionaries.studioDictionary, 'studio'));\r\n    featureVector.push(...toFeaturizedFromDictionary(movie, dictionaries.keywordsDictionary, 'keywords'));\r\n\r\n    return featureVector;\r\n  }\r\n}\r\n\r\nexport function toFeaturizedRelease(movie) {\r\n  return movie.release ? Number((movie.release).slice(0, 4)) : 'undefined';\r\n}\r\n\r\nexport function toFeaturizedAdult(movie) {\r\n  return movie.adult === 'False' ? 0 : 1;\r\n}\r\n\r\nexport function toFeaturizedHomepage(movie) {\r\n  return movie.homepage ? 0 : 1;\r\n}\r\n\r\nexport function toFeaturizedLanguage(movie) {\r\n  return movie.language === 'en' ? 1 : 0;\r\n}\r\n\r\nexport function toFeaturizedFromDictionary(movie, dictionary, property) {\r\n  // Fallback, because not all movies have associated keywords\r\n  const propertyIds = (movie[property] || []).map(value => value.id);\r\n  const isIncluded = (value) => propertyIds.includes(value.id) ? 1 : 0;\r\n  return dictionary.map(isIncluded);\r\n}\r\n\r\nexport function toFeaturizedNumber(movie, property) {\r\n  const number = Number(movie[property]);\r\n\r\n  // Fallback for NaN\r\n  if (number > 0 || number === 0) {\r\n    return number;\r\n  } else {\r\n    return 'undefined';\r\n  }\r\n}\r\n\r\n// Refactored in favor of generic function\r\n\r\n// function toFeaturizedGenres(movie, genresDictionary) {\r\n//   const movieGenreIds = movie.genres.map(genre => genre.id);\r\n//   const isGenre = (genre) => movieGenreIds.includes(genre.id) ? 1 : 0;\r\n//   return genresDictionary.map(isGenre);\r\n// }\r\n\r\n// function getFeatureScalingCoefficients(movies, 'budget') {\r\n//   const { range, mean } = movies.reduce((result, value, property) => {\r\n\r\n//   }, {});\r\n\r\n//   return { range, mean };\r\n// }\r\n\r\n// function toFeaturizedLanguageProperty(movie) {\r\n//   return 0;\r\n// }\r\n\r\nexport function fromArrayToMap(array, property) {\r\n  return array.map((value) => {\r\n    const transformed = value[property].map((value) => ({\r\n      id: value,\r\n      name: value,\r\n    }));\r\n\r\n    return { ...value, [property]: transformed };\r\n  });\r\n}\r\n\r\nexport function withTokenizedAndStemmed(array, property) {\r\n  return array.map((value) => ({\r\n    ...value,\r\n    [property]: value[property].tokenizeAndStem(),\r\n  }));\r\n}\r\n\r\nexport function filterByThreshold(dictionary, threshold) {\r\n  return Object.keys(dictionary)\r\n    .filter(key => dictionary[key].count > threshold)\r\n    .map(key => dictionary[key]);\r\n}\r\n\r\nexport function toDictionary(array, property) {\r\n  const dictionary = {};\r\n\r\n  array.forEach((value) => {\r\n    // Fallback for null value after refactoring\r\n    (value[property] || []).forEach((innerValue) => {\r\n      if (!dictionary[innerValue.id]) {\r\n        dictionary[innerValue.id] = {\r\n          ...innerValue,\r\n          count: 1,\r\n        };\r\n      } else {\r\n        dictionary[innerValue.id] = {\r\n          ...dictionary[innerValue.id],\r\n          count: dictionary[innerValue.id].count + 1,\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  return dictionary;\r\n}\r\n\r\n// Refactored in favor of toDictionary\r\n\r\n// export function toGenresDictionary(movies) {\r\n//   const genresDictionary = {};\r\n\r\n//   movies.forEach((movie) => {\r\n//     movie.genres.forEach((genre) => {\r\n//       if (!genresDictionary[genre.id]) {\r\n//         genresDictionary[genre.id] = {\r\n//           name: genre.name,\r\n//           count: 1,\r\n//         };\r\n//       } else {\r\n//         genresDictionary[genre.id] = {\r\n//           name: genre.name,\r\n//           count: genresDictionary[genre.id].count + 1,\r\n//         }\r\n//       }\r\n//     });\r\n//   });\r\n\r\n//   return genresDictionary;\r\n// }\r\n\r\nexport function zip(movies, keywords) {\r\n  return Object.keys(movies).map(mId => ({\r\n    ...movies[mId],\r\n    ...keywords[mId],\r\n  }));\r\n}\r\n\r\nexport default prepareMovies;"]}