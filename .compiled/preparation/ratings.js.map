{"version":3,"sources":["../../src/preparation/ratings.js"],"names":["getRatingCountsByUser","getRatingCountsByMovie","getRatingsGroupedByMovie","getRatingsGroupedByUser","prepareRatings","ratings","console","log","ratingCountsByMovie","ratingCountsByUser","POPULARITY_TRESHOLD","movieRatings","userRatings","ratingsGroupedByUser","ratingsGroupedByMovie","reduce","result","value","userId","rating","movieId","popularityThreshold","timestamp","Number","ratingCounts","popularity"],"mappings":"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","file":"ratings.js","sourcesContent":["function prepareRatings(ratings) {\r\n  console.log('Preparing Ratings ... \\n');\r\n\r\n  const ratingCountsByMovie = getRatingCountsByMovie(ratings);\r\n  const ratingCountsByUser = getRatingCountsByUser(ratings);\r\n\r\n  const POPULARITY_TRESHOLD = {\r\n    movieRatings: 50, // be careful not to exclude the movies of your focused user\r\n    userRatings: 5, // be careful not to exclude your focused user\r\n  };\r\n\r\n  console.log('(1) Group ratings by user');\r\n  const ratingsGroupedByUser = getRatingsGroupedByUser(\r\n    ratings,\r\n    ratingCountsByMovie,\r\n    ratingCountsByUser,\r\n    POPULARITY_TRESHOLD\r\n  );\r\n\r\n  console.log('(2) Group ratings by movie \\n');\r\n  const ratingsGroupedByMovie = getRatingsGroupedByMovie(\r\n    ratings,\r\n    ratingCountsByMovie,\r\n    ratingCountsByUser,\r\n    POPULARITY_TRESHOLD\r\n  );\r\n\r\n  return { ratingsGroupedByUser, ratingsGroupedByMovie };\r\n}\r\n\r\nexport function getRatingCountsByUser(ratings) {\r\n  return ratings.reduce((result, value) => {\r\n    const { userId, rating } = value;\r\n\r\n    if (!result[userId]) {\r\n      result[userId] = 0;\r\n    }\r\n\r\n    result[userId]++;\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport function getRatingCountsByMovie(ratings) {\r\n  return ratings.reduce((result, value) => {\r\n    const { movieId, rating } = value;\r\n\r\n    if (!result[movieId]) {\r\n      result[movieId] = 0;\r\n    }\r\n\r\n    result[movieId]++;\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport function getRatingsGroupedByMovie(ratings, ratingCountsByMovie, ratingCountsByUser, popularityThreshold) {\r\n  const { movieRatings, userRatings } = popularityThreshold;\r\n\r\n  return ratings.reduce((result, value) => {\r\n    const { userId, movieId, rating, timestamp } = value;\r\n\r\n    if (ratingCountsByMovie[movieId] < movieRatings || ratingCountsByUser[userId] < userRatings) {\r\n      return result;\r\n    }\r\n\r\n    if (!result[movieId]) {\r\n      result[movieId] = {};\r\n    }\r\n\r\n    result[movieId][userId] = { rating: Number(rating), timestamp };\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport function getRatingsGroupedByUser(ratings, ratingCounts, popularity) {\r\n  return ratings.reduce((result, value) => {\r\n    const { userId, movieId, rating } = value;\r\n\r\n    if (ratingCounts[movieId] < popularity) {\r\n      return result;\r\n    }\r\n\r\n    if (!result[userId]) {\r\n      result[userId] = {};\r\n    }\r\n\r\n    result[userId][movieId] = { rating: Number(rating) };\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n\r\nexport default prepareRatings;"]}